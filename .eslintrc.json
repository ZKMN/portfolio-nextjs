{
  "env": {
    "jest": true,
    "es2021": true,
    "browser": true
  },
  "extends": [
    "airbnb",
    "eslint:recommended",
    "plugin:@next/next/recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:@typescript-eslint/eslint-recommended"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaFeatures": {
      "jsx": true
    },
    "ecmaVersion": "latest",
    "sourceType": "module"
  },
  "plugins": [
    "react",
    "react-hooks",
    "@typescript-eslint",
    "simple-import-sort"
  ],
  "rules": {
    "simple-import-sort/imports": [
      "error",
      {
        "groups": [
          // Packages `react` related packages come first.
          ["^react", "^@?\\w"],
          // Internal packages.
          ["^(@/appLayer)(/.*|$)"],
          ["^(@/pagesLayer)(/.*|$)"],
          ["^(@/widgets)(/.*|$)"],
          ["^(@/features)(/.*|$)"],
          ["^(@/entities)(/.*|$)"],
          ["^(@/shared)(/.*|$)"],
          ["^(@/components)(/.*|$)"],
          // Side effect imports.
          ["^\\u0000"],
          // Parent imports. Put `..` last.
          // Other relative imports. Put same-folder imports and `.` last.
          ["^\\./(?=.*/)(?!/?$)", "^\\.(?!/?$)", "^\\./?$"],
          ["^\\.\\.(?!/?$)", "^\\.\\./?$"],
          // Style imports.
          ["^.+\\.?(css)$"]
        ]
      }
    ],
    "max-len": ["error", { "code": 200, "tabWidth": 4 }],
    "no-console": ["warn", { "allow": ["warn", "error"] }],
    "no-shadow": "off",
    "no-use-before-define": "off",
    "import/extensions": "off",
    "import/no-unresolved": "off",
    "import/prefer-default-export": "off",
    "import/no-extraneous-dependencies": "off",
    "react/jsx-key": "error",
    "react/react-in-jsx-scope": "off",
    "react-hooks/exhaustive-deps": "off",
    "react/jsx-filename-extension": "off",
    "react/require-default-props": "off",
    "react/function-component-definition": [2, { "namedComponents": "arrow-function" }],
    "@typescript-eslint/ban-ts-comment": "warn",
    "@typescript-eslint/no-namespace": "off",
    "@typescript-eslint/no-unused-vars": ["warn", { "ignoreRestSiblings": true }]
  }
}
